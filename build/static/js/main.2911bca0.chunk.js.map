{"version":3,"sources":["components/Menu.js","hooks/useLocalStorageForm.js","components/Form1.js","components/Form2.js","components/Datos.js","hooks/useLocalStorage.js","components/Frutas.js","components/FormAddArray.js","components/FormAddDelToArray.js","components/CryptosFabChecked.js","components/CryptosFabCheckedAddDelArray.js","App.js","index.js"],"names":["Menu","Navbar","expand","className","Brand","href","Toggle","aria-controls","Collapse","id","Nav","style","maxHeight","navbarScroll","Link","useLocalStorage","key","defaultValue","useState","window","saved","localStorage","getItem","JSON","parse","getStorageValue","value","setValue","useEffect","setItem","stringify","Form1","name","setName","type","onChange","e","target","placeholder","aria-label","Form2","checked","setChecked","Datos","query","setQuery","hits","setHits","filteredHits","setFilteredHits","searchEl","useRef","fetchUsers","useCallback","fetch","then","res","json","data","users","length","filter","i","regex","RegExp","match","ref","map","v","initialValue","error","console","log","state","setState","valueToStore","Function","fruits","Frutas","userData","setUserData","favorites","editMode","setEditMode","elevation","onSubmit","preventDefault","label","labelFor","intent","text","fill","fruit","inline","indexOf","index","prevValues","slice","onFruitChecked","onClick","round","minimal","large","FormAddArray","DataSymbol","setDataSymbol","crypto","Card","width","Button","variant","size","symbol","delSymbol","elem","includes","handleDelete","Form","Group","controlId","Control","toUpperCase","cryptos","CryptosFabChecked","onCryptoChecked","CryptosFabCheckedAddDelArray","App","excact","path","element","FormAddDelToArray","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2911bca0.chunk.js","sourcesContent":["import React from 'react'\n\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\n// import NavDropdown from 'react-bootstrap/NavDropdown'\n\nfunction Menu () {\n  return (\n    <>\n      <Navbar expand=\"lg\" className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n        <Navbar.Brand href=\"/\">prueba</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"navbarScroll\" />\n        <Navbar.Collapse id=\"navbarScroll\">\n          <Nav\n            className=\"mr-auto my-2 my-lg-0 navbar-dark bg-dark\"\n            style={{ maxHeight: '100px' }}\n            navbarScroll\n          >\n            <Nav.Link href=\"/Form1\">Form1</Nav.Link>\n            <Nav.Link href=\"/Form2\">Form2</Nav.Link>\n            <Nav.Link href=\"/Datos\">Datos</Nav.Link>\n            <Nav.Link href=\"/Frutas\">Frutas</Nav.Link>\n            <Nav.Link href=\"/FormAddArray\">FormAddArray</Nav.Link>\n            <Nav.Link href=\"/FormAddDelToArray\">FormAddDelToArray</Nav.Link>\n            <Nav.Link href=\"/CryptosFabChecked\">CryptosFabChecked</Nav.Link>\n            <Nav.Link href=\"/CryptosFabCheckedAddDelArray\">CryptosFabCheckedAddDelArray</Nav.Link>\n            {/* <NavDropdown title=\"Smart Contracts\" id=\"navbarScrollingDropdown\">\n              <NavDropdown.Item href=\"/smart\">Add Smart Contracts</NavDropdown.Item>\n              <NavDropdown.Item href=\"/smart_list\">List Smart Contracts</NavDropdown.Item>\n              <NavDropdown.Divider />\n            <NavDropdown.Item href=\"#action5\">Something else here</NavDropdown.Item>\n            </NavDropdown> */}\n          </Nav>\n          {/* <Form className=\"d-flex\">\n          <FormControl\n            type=\"search\"\n            placeholder=\"Search\"\n            className=\"mr-2\"\n            aria-label=\"Search\"\n          />\n          <Button variant=\"outline-success\">Search</Button>\n        </Form> */}\n        </Navbar.Collapse>\n      </Navbar>\n    </>\n  )\n}\n\nexport default Menu\n","import { useState, useEffect } from \"react\";\n\nfunction getStorageValue (key, defaultValue) {\n  // getting stored value\n  if (typeof window !== \"undefined\") {\n    const saved = localStorage.getItem(key);\n    const initial = saved !== null ? JSON.parse(saved) : defaultValue;\n    return initial;\n  }\n}\n\nexport const useLocalStorage = (key, defaultValue) => {\n  const [value, setValue] = useState(() => {\n    return getStorageValue(key, defaultValue);\n  });\n\n  useEffect(() => {\n    // storing input name\n    localStorage.setItem(key, JSON.stringify(value));\n  }, [key, value]);\n\n  return [value, setValue];\n};","import React, { useState, useEffect } from \"react\";\nimport { useLocalStorage } from \"../hooks/useLocalStorageForm\";\n\nconst Form1 = () => {\n\n  const [name, setName] = useLocalStorage(\"name\", \"\");\n\n  // usando el localStorage local\n  // const [name, setName] = useState(() => {\n\n  //   //obteniendo valor almacenado\n  //   const saved = localStorage.getItem('name')\n  //   const initialValue = JSON.parse(saved)\n  //   return initialValue || \"\"\n  // });\n\n  useEffect(() => {\n    localStorage.setItem(\"name\", JSON.stringify(name))\n  }, [name])\n\n  return (\n    <>\n      {name ? (\n        <div className=\"pt-4\">\n          El nombre es:<strong>{name}</strong>\n        </div>\n      ) : (\n        <></>\n      )\n      }\n\n      <form className=\"pt-3\">\n        <div className=\"input-group mb-3\">\n          <input\n            className=\"form-control\"\n            type=\"text\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            placeholder=\"Full name\"\n            aria-label=\"fullname\"\n          />\n          <input className=\"btn btn-primary\" type=\"submit\" value=\"Submit\"></input>\n        </div>\n      </form>\n    </>\n  );\n};\nexport default Form1\n\n\n      // <button class=\"btn btn-primary\" type=\"button\" id=\"button-addon2\">Button</button>","import React, { useState } from \"react\";\nimport { useLocalStorage } from \"../hooks/useLocalStorageForm\";\n\nconst Form2 = () => {\n\n  const [name, setName] = useLocalStorage(\"name2\", \"\");\n  const [checked, setChecked] = useLocalStorage(\"checked\", false);\n\n  // Usado en local\n  // const [name, setName] = useState(\"\");\n  // const [checked, setChecked] = useState(false);\n\n  return (\n    <form >\n      <div className=\"form-group row\">\n        <input\n          className=\"form-control\"\n          type=\"text\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n          placeholder=\"Full name\"\n          aria-label=\"fullname\"\n        />\n        <div className=\"form-check\">\n\n          <label className=\"form-check-label\" >\n            <input\n              className=\"form-check-input\"\n              type=\"checkbox\"\n              checked={checked}\n              onChange={(e) => setChecked(e.target.checked)}\n            />{\" \"}\n            Not a robot?\n          </label>\n        </div>\n        <input className=\"btn btn-primary\" type=\"submit\" value=\"Submit\"></input>\n      </div>\n    </form>\n  );\n};\n\nexport default Form2;","import React, { useState, useEffect, useCallback, useRef } from \"react\";\n\nfunction Datos () {\n  const [query, setQuery] = useState(\"\");\n  const [hits, setHits] = useState([]);\n  const [filteredHits, setFilteredHits] = useState([] || JSON.parse(\"users\"));\n  const searchEl = useRef(null);\n\n  const handleChange = (e) => {\n    setQuery(e.target.value);\n  };\n\n  const fetchUsers = useCallback(\n    function fetchUsers () {\n      fetch(\"https://jsonplaceholder.typicode.com/users\")\n        .then((res) => res.json())\n        .then((data) => {\n          setHits(data);\n          const users = window.localStorage.setItem(\"users\", JSON.stringify(hits));\n          setFilteredHits(users);\n        });\n    },\n    // eslint-disable-next-line\n    []\n  );\n\n  useEffect(() => {\n    fetchUsers();\n  }, [fetchUsers]);\n\n  useEffect(() => {\n    let filteredHits = hits;\n    if (query && hits.length > 0) {\n      filteredHits = hits.filter((i) => {\n        const regex = new RegExp(query, \"ig\");\n        return i.name.match(regex);\n      });\n    }\n    setFilteredHits(filteredHits);\n  }, [hits, query]);\n\n  return (\n    <div>\n      <section>\n        <form>\n          <input\n            type=\"search\"\n            name=\"query\"\n            value={query}\n            onChange={handleChange}\n            ref={searchEl}\n          />\n        </form>\n      </section>\n      <ul>\n        {filteredHits.map((v) => (\n          <li key={v.id}>{v.name}</li>\n        ))}\n      </ul>\n    </div>\n  )\n}\n\nexport default Datos\n","import { useState } from \"react\";\n\nconst useLocalStorage = (key, initialValue) => {\n  const [state, setState] = useState(() => {\n    // Initialize the state\n    try {\n      const value = window.localStorage.getItem(key);\n      // Check if the local storage already has any values,\n      // otherwise initialize it with the passed initialValue\n      return value ? JSON.parse(value) : initialValue;\n    } catch (error) {\n      console.log(error);\n    }\n  });\n\n  const setValue = (value) => {\n    try {\n      // If the passed value is a callback function,\n      //  then call it with the existing state.\n      const valueToStore = value instanceof Function ? value(state) : value;\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n      setState(value);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return [state, setValue];\n};\n\nexport default useLocalStorage;\n","import '../fruit.css'\nimport React, { useState } from 'react'\nimport {\n  Button,\n  Card,\n  Checkbox,\n  FormGroup,\n  InputGroup,\n  Tag,\n} from \"@blueprintjs/core\";\nimport useLocalStorage from \"../hooks/useLocalStorage\";\n\nconst fruits = [\n  \"Apple\",\n  \"Orange\",\n  \"Guava\",\n  \"Mango\",\n  \"Grapes\",\n  \"Kiwi\",\n  \"Strawberry\",\n];\n\nfunction Frutas () {\n\n  const [name, setName] = useState(\"\");\n  const [userData, setUserData] = useLocalStorage(\"user\", null);\n  // Establezca el modo de edición en verdadero siempre que el userData no esté presente o\n  // selected favorites are 0\n  const [editMode, setEditMode] = useState(\n    userData === null || userData?.favorites?.length === 0\n  );\n\n  const onFruitChecked = (e, fruit) => {\n    // Compruebe si la fruta existe en la lista actual de favoritos\n    const index = userData.favorites.indexOf(fruit);\n    console.log(userData)\n    console.log(index)\n    // Si la casilla de verificación está marcada y la fruta no es parte de las favoritas\n    if (e.target.checked && index === -1) {\n      setUserData((prevValues) => {\n        // Agregar la fruta a la lista actual de favoritos\n        return { ...prevValues, favorites: [...prevValues.favorites, fruit] };\n      });\n    } else if (!e.target.checked && index !== -1) {\n      // Si la casilla de verificación no está marcada y la fruta es parte de los favoritos\n      setUserData((prevValues) => {\n        // Eliminar la fruta de la lista actual de favoritos\n        return {\n          ...prevValues,\n          favorites: [\n            ...prevValues.favorites.slice(0, index),\n            ...prevValues.favorites.slice(index + 1),\n          ],\n        };\n      });\n    }\n  }\n  const formSubmitHandler = (e) => {\n    e.preventDefault();\n    try {\n      setUserData({ name, favorites: [] });\n      setEditMode(true);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <div className=\"pt-5\">\n      {userData === null && (\n        <Card elevation=\"1\">\n          <form onSubmit={formSubmitHandler}>\n            <FormGroup label=\"Name\" labelFor=\"name\">\n              <InputGroup\n                id=\"Name\"\n                placeholder=\"Name\"\n                type=\"Name\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              />\n            </FormGroup>\n            <Button intent=\"primary\" text=\"Submit\" fill type=\"submit\" />\n          </form>\n        </Card>\n      )}\n      {userData &&\n        (editMode ? (\n          <Card elevation=\"1\">\n            <p>\n              Welcome <strong>{userData.name}</strong>, choose your favorite\n              fruits:\n            </p>\n            {fruits.map((fruit) => {\n              return (\n                <Checkbox\n                  key={fruit}\n                  label={fruit}\n                  inline={true}\n                  className=\"space\"\n                  checked={userData.favorites.indexOf(fruit) !== -1}\n                  onChange={(e) => {\n                    onFruitChecked(e, fruit);\n                  }}\n                />\n              );\n            })}\n            <Button\n              intent=\"primary\"\n              text=\"Done\"\n              fill\n              type=\"submit\"\n              onClick={() => setEditMode(false)}\n            />\n          </Card>\n        ) : (\n          <Card elevation=\"1\">\n            <p>\n              Welcome <strong>{userData.name}</strong>, your favorite fruits\n              are:\n            </p>\n            {userData.favorites.map((fruit) => {\n              return (\n                <Tag\n                  key={fruit}\n                  round\n                  minimal\n                  large\n                  intent=\"success\"\n                  className=\"space\"\n                >\n                  {fruit}\n                </Tag>\n              );\n            })}\n            <Button\n              intent=\"primary\"\n              text=\"Change\"\n              fill\n              type=\"submit\"\n              onClick={() => setEditMode(true)}\n            />\n          </Card>\n        ))}\n    </div>\n  );\n}\n\nexport default Frutas\n","import React, { useState, useEffect } from \"react\";\nimport useLocalStorage from \"../hooks/useLocalStorage\";\n\nimport {\n  Button,\n  Card,\n  FormGroup,\n  InputGroup,\n  Tag,\n} from \"@blueprintjs/core\";\n\n\nfunction FormAddArray () {\n\n  const [DataSymbol, setDataSymbol] = useLocalStorage(\"crypto\", [\n    \"LTC\",\n    \"ADA\",\n    \"DOT\"]);\n\n  const [name, setName] = useState('')\n\n  const handleSubmint = e => {\n    e.preventDefault()\n    // comprobamos que si ya existe\n    const index = DataSymbol.indexOf(name)\n\n    if (index === -1) {\n      setDataSymbol(prevValues => {\n        return [...prevValues, name]\n      })\n    } else {\n      console.log(\"existe\")\n    }\n\n\n\n  }\n\n\n  return (\n    <>\n\n      <Card elevation=\"1\">\n        <p>\n          Estas son las cryptos a listar\n        </p>\n        {DataSymbol ? (\n          <>\n            {DataSymbol.map(crypto => {\n              return (\n                <Tag\n                  key={crypto}\n                  round\n                  minimal\n                  large\n                  intent=\"warning\"\n                  className=\"space\"\n                >\n                  {crypto}\n                </Tag>\n              )\n            })}\n          </>\n        ) : (\n          <>\n          </>\n        )}\n        <form onSubmit={handleSubmint}>\n          <FormGroup label=\"Symbolo Coin\" labelFor=\"name\">\n            <InputGroup\n              id=\"symbolCoin\"\n              // placeholder=\"Symbol coin\"\n              type=\"symbolCoin\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n            />\n          </FormGroup>\n          <Button intent=\"primary\" text=\"Guardar\" fill type=\"submit\" />\n        </form>\n      </Card>\n\n\n\n\n\n    </>\n  )\n}\n\nexport default FormAddArray\n","import React, { useState } from \"react\";\nimport useLocalStorage from \"../hooks/useLocalStorage\";\nimport {\n  Button,\n  Card,\n  Form\n\n} from 'react-bootstrap';\n\n\nfunction FormAddArray () {\n\n  const [DataSymbol, setDataSymbol] = useLocalStorage(\"crypto\", [\n    \"LTC\",\n    \"ADA\",\n    \"DOT\"]);\n\n  const [name, setName] = useState('')\n\n  const handleSubmint = e => {\n    e.preventDefault()\n    // comprobamos que si ya existe\n    const index = DataSymbol.indexOf(name)\n\n    if (index === -1) {\n      setName(\"\")\n      setDataSymbol(prevValues => {\n        return [...prevValues, name]\n      }\n      )\n    } else {\n      console.log(\"existe\")\n    }\n\n  }\n\n  const handleDelete = (symbol) => {\n\n    const delSymbol = DataSymbol.filter(elem => !symbol.includes(elem))\n    setDataSymbol(delSymbol)\n\n  }\n\n  return (\n    <>\n      <h5>Form add delete to Arry</h5>\n      <p>Bootstrap</p>\n      <Card className=\"pe-2 py-4\" style={{ width: '25rem' }}>\n\n        {DataSymbol ? (\n          <>\n            <p>\n              Estas son las cryptos a listar\n            </p>\n            <div className=\"col\">\n              {DataSymbol.map(crypto => {\n                return (\n                  <span className=\"px-1 pb-2\" key={crypto}>\n                    <Button\n                      className=\"btn-delete\"\n                      variant=\"outline-success\"\n                      size=\"sm\"\n                      onClick={() => handleDelete(crypto)}\n                    >\n                      {crypto}\n                    </Button>\n                  </span>\n\n                )\n              })}\n            </div>\n          </>\n        ) : (\n          <>\n            No hay criptos..?\n          </>\n        )}\n\n        <Form\n          onSubmit={handleSubmint}\n          className=\"mx-3 pt-4\"\n        >\n          <Form.Group className=\"mb-3\" controlId=\"symbolCoin\">\n            <Form.Control\n\n              type=\"symbolCoin\"\n              placeholder=\"Symbolo Coin\"\n              value={name}\n              onChange={(e) => setName(e.target.value.toUpperCase())}\n\n            />\n          </Form.Group>\n          <Button variant=\"success\" type=\"submit\">Guardar</Button>\n        </Form>\n      </Card>\n\n    </>\n  )\n}\n\nexport default FormAddArray\n","// import '../fruit.css'\nimport React, { useState } from 'react'\n\nimport {\n  Button,\n  Card,\n  Checkbox,\n  Tag,\n} from \"@blueprintjs/core\";\nimport useLocalStorage from \"../hooks/useLocalStorage\";\n\nconst cryptos = [\n  \"BTC\",\n  \"LTC\",\n  \"ADA\",\n  \"DOT\",\n  // \"CAKE\"\n]\n\n\nfunction CryptosFabChecked () {\n\n  const [userData, setUserData] = useLocalStorage(\"cryptos\", { favorites: [] });\n  const [editMode, setEditMode] = useState(false);\n\n  const onCryptoChecked = (e, crypto) => {\n    // Compruebe si la fruta existe en la lista actual de favoritos\n    const index = userData.favorites.indexOf(crypto);\n\n    // Si la casilla de verificación está marcada y la fruta no es parte de las favoritas\n    if (e.target.checked && index === -1) {\n      setUserData((prevValues) => {\n        // Agregar la fruta a la lista actual de favoritos\n        return { ...prevValues, favorites: [...prevValues.favorites, crypto] };\n      });\n    } else if (!e.target.checked && index !== -1) {\n      // Si la casilla de verificación no está marcada y la fruta es parte de los favoritos\n      setUserData((prevValues) => {\n        // Eliminar la fruta de la lista actual de favoritos\n        return {\n          ...prevValues,\n          favorites: [\n            ...prevValues.favorites.slice(0, index),\n            ...prevValues.favorites.slice(index + 1),\n          ],\n\n        };\n      });\n    }\n  }\n\n  return (\n    <>\n      {editMode ? (\n        <div>\n          <Card elevation=\"1\">\n            <p>\n              Que pacha <strong>\n                userData.name\n              </strong>, eleguir las favoritas\n              cryptos:\n            </p>\n            {cryptos.map((crypto) => {\n              return (\n                <Checkbox\n                  key={crypto}\n                  label={crypto}\n                  inline={true}\n                  className=\"space\"\n                  checked={userData.favorites.indexOf(crypto) !== -1}\n                  onChange={(e) => {\n                    onCryptoChecked(e, crypto);\n                  }}\n                />\n              );\n            })}\n            <Button\n              intent=\"primary\"\n              text=\"Guardar\"\n              fill\n              type=\"submit\"\n              onClick={() => setEditMode(false)}\n            />\n          </Card>\n        </div>\n      ) : (\n        <Card elevation=\"1\">\n          <p>\n            Que pacha <strong>{userData.name}</strong>, Estas son tus cryptos faboritas:\n          </p>\n          {userData.favorites.map((crypto) => {\n            return (\n              <Tag\n\n                key={crypto}\n                round\n                minimal\n                large\n                intent=\"success\"\n                className=\"space\"\n              >\n                {crypto}\n              </Tag>\n            );\n          })}\n          <Button\n            intent=\"primary\"\n            text=\"Eleguir\"\n            fill\n            type=\"submit\"\n            onClick={() => setEditMode(true)}\n          />\n        </Card>\n      )}\n    </>\n\n\n  )\n}\n\nexport default CryptosFabChecked\n\n","// import '../fruit.css'\nimport React, { useState } from 'react'\n\nimport {\n  Button,\n  Card,\n  Checkbox,\n  Tag,\n} from \"@blueprintjs/core\";\nimport useLocalStorage from \"../hooks/useLocalStorage\";\n\nconst cryptos = [\n  \"BTC\",\n  \"LTC\",\n  \"ADA\",\n  \"DOT\",\n  // \"CAKE\"\n]\n\n\nfunction CryptosFabCheckedAddDelArray () {\n\n  const [userData, setUserData] = useLocalStorage(\"cryptos\", { favorites: [] });\n  const [editMode, setEditMode] = useState(false);\n\n  const onCryptoChecked = (e, crypto) => {\n    // Compruebe si la fruta existe en la lista actual de favoritos\n    const index = userData.favorites.indexOf(crypto);\n\n    // Si la casilla de verificación está marcada y la fruta no es parte de las favoritas\n    if (e.target.checked && index === -1) {\n      setUserData((prevValues) => {\n        // Agregar la fruta a la lista actual de favoritos\n        return { ...prevValues, favorites: [...prevValues.favorites, crypto] };\n      });\n    } else if (!e.target.checked && index !== -1) {\n      // Si la casilla de verificación no está marcada y la fruta es parte de los favoritos\n      setUserData((prevValues) => {\n        // Eliminar la fruta de la lista actual de favoritos\n        return {\n          ...prevValues,\n          favorites: [\n            ...prevValues.favorites.slice(0, index),\n            ...prevValues.favorites.slice(index + 1),\n          ],\n\n        };\n      });\n    }\n  }\n\n  return (\n    <>\n      {editMode ? (\n        <div>\n          <Card elevation=\"1\">\n            <p>\n              Que pacha <strong>\n                userData.name\n              </strong>, eleguir las favoritas\n              cryptos:\n            </p>\n            {cryptos.map((crypto) => {\n              return (\n                <Checkbox\n                  key={crypto}\n                  label={crypto}\n                  inline={true}\n                  className=\"space\"\n                  checked={userData.favorites.indexOf(crypto) !== -1}\n                  onChange={(e) => {\n                    onCryptoChecked(e, crypto);\n                  }}\n                />\n              );\n            })}\n            <Button\n              intent=\"primary\"\n              text=\"Guardar\"\n              fill\n              type=\"submit\"\n              onClick={() => setEditMode(false)}\n            />\n          </Card>\n        </div>\n      ) : (\n        <Card elevation=\"1\">\n          <p>\n            Que pacha <strong>{userData.name}</strong>, Estas son tus cryptos faboritas:\n          </p>\n          {userData.favorites.map((crypto) => {\n            return (\n              <Tag\n\n                key={crypto}\n                round\n                minimal\n                large\n                intent=\"success\"\n                className=\"space\"\n              >\n                {crypto}\n              </Tag>\n            );\n          })}\n          <Button\n            intent=\"primary\"\n            text=\"Eleguir\"\n            fill\n            type=\"submit\"\n            onClick={() => setEditMode(true)}\n          />\n        </Card>\n      )}\n    </>\n\n\n  )\n}\n\nexport default CryptosFabCheckedAddDelArray\n\n","import React from 'react';\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\n\n\nimport './App.css';\nimport 'bootswatch/dist/sandstone/bootstrap.min.css'\n// import 'bootstrap/dist/css/bootstrap.min.css'\n\nimport Menu from './components/Menu'\nimport Form1 from './components/Form1'\nimport Form2 from './components/Form2'\nimport Datos from './components/Datos'\nimport Frutas from './components/Frutas';\nimport FormAddArray from './components/FormAddArray';\nimport FormAddDelToArray from './components/FormAddDelToArray';\nimport CryptosFabChecked from './components/CryptosFabChecked'\nimport CryptosFabCheckedAddDelArray from './components/CryptosFabCheckedAddDelArray'\n\n\n\nclass App extends React.Component {\n  render () {\n    return (\n      <BrowserRouter>\n        <Menu />\n        <div className=\"App-header \">\n          <div className=\"App\">\n\n            <Routes>\n              <Route excact path=\"/Form1\" element={<Form1 />} />\n              <Route excact path=\"/Form2\" element={<Form2 />} />\n              <Route excact path=\"/Datos\" element={<Datos />} />\n              <Route excact path=\"/Frutas\" element={<Frutas />} />\n              <Route excact path=\"/FormAddArray\" element={<FormAddArray />} />\n              <Route excact path=\"/FormAddDelToArray\" element={<FormAddDelToArray />} />\n              <Route excact path=\"/CryptosFabChecked\" element={<CryptosFabChecked />} />\n              <Route excact path=\"/CryptosFabCheckedAddDelArray\" element={<CryptosFabCheckedAddDelArray />} />\n            </Routes>\n          </div>\n        </div>\n      </BrowserRouter>\n\n    );\n  }\n}\n\n\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}